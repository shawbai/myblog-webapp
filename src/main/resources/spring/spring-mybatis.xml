<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 使用AspectJ方式配置AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- druid filter -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<!-- 慢SQL记录 -->
		<property name="slowSqlMillis" value="2000" />
		<property name="logSlowSql" value="true" />

		<!-- SQL合并 -->
		<property name="mergeSql" value="true" />
	</bean>

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="resultSetLogEnabled" value="false" />
	</bean>

	<!-- 防御sql注入 -->
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="logViolation" value="true" />
		<property name="throwException" value="false" />
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	
		<!-- 基本属性 driverClassName、 url、user、password -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${pool.initialSize}" />
		<property name="minIdle" value="${pool.minIdle}" />
		<property name="maxActive" value="${pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${pool.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用 -->
		<property name="validationQuery" value="SELECT 'x'" />

		<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效 -->
		<property name="testWhileIdle" value="true" />

		<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnBorrow" value="false" />

		<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->        <!--如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<!-- 对于长时间不使用的连接强制关闭 -->
		<property name="removeAbandoned" value="true" />

		<!-- 超过30分钟开始关闭空闲连接 -->
		<property name="removeAbandonedTimeout" value="1800" />

		<!-- 将当前关闭动作记录到日志 -->
		<property name="logAbandoned" value="true" />
	</bean>
		
    <!-- mybatis -->
    <bean id="persistenceSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <!--  <property name="configLocation" value="classpath:mybatis-config.xml"></property> -->
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mybatis/mappers/*.xml" />
    </bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	   <property name="basePackage" value="com.shaw.myblog.mapper"/> 
	</bean>	
		
</beans>